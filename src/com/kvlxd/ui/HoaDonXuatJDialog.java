/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.kvlxd.ui;

import com.kvlxd.dao.HoaDonXuatChiTietDAO;
import com.kvlxd.dao.HoaDonXuatDAO;
import com.kvlxd.dao.KhachHangDAO;
import com.kvlxd.dao.KhoDAO;
import com.kvlxd.dao.MatHangDAO;
import com.kvlxd.dao.NhanVienDAO;
import com.kvlxd.entity.HoaDonNhap;
import com.kvlxd.entity.HoaDonNhapChiTiet;
import com.kvlxd.entity.HoaDonXuat;
import com.kvlxd.entity.HoaDonXuatChiTiet;
import com.kvlxd.entity.KhachHang;
import com.kvlxd.entity.Kho;
import com.kvlxd.entity.MatHang;
import com.kvlxd.entity.NhanVien;
import com.kvlxd.util.Auth;
import com.kvlxd.util.CheckData;
import com.kvlxd.util.MsgBox;
import com.kvlxd.util.WFile;
import com.kvlxd.util.XDate;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author cuong
 */
public class HoaDonXuatJDialog extends javax.swing.JInternalFrame {

    /**
     * Creates new form HoaDonXuat
     */
    public HoaDonXuatJDialog() {
        initComponents();
        inits();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMaHDX = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtSDTLX = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenLX = new javax.swing.JTextField();
        txtNgayXuat = new javax.swing.JTextField();
        txtTenNV = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        txtTenKH = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cbbTenKH = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtSL = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        lblDV = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHDCT = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        cbbTenMH = new javax.swing.JComboBox<>();
        cbbKho = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JLabel();
        txtTongTien1 = new javax.swing.JLabel();
        lblSoLuongtrongKho = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        btnThemHD = new javax.swing.JButton();
        btnSuaHD = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        rbT = new javax.swing.JRadioButton();
        rbF = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        txtSearchTheoNgay = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cboSearchTheoMaHD = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblHDX = new javax.swing.JTable();
        btnTimHDTheoNgay = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Mã HDX");

        txtMaHDX.setEditable(false);
        txtMaHDX.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Tên nhân viên");

        txtSDTLX.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Ngày xuất");

        txtTenLX.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtNgayXuat.setEditable(false);
        txtNgayXuat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtTenNV.setEditable(false);
        txtTenNV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Tên lái xe");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("SĐT lái xe");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTenLX, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(51, 51, 51)
                        .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(247, 247, 247)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNgayXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSDTLX, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(57, 57, 57))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtNgayXuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTenLX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtSDTLX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin khách hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        txtTenKH.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Tên khách hàng");

        txtDiaChi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Địa chỉ");

        txtSDT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("SĐT");

        cbbTenKH.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbTenKH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbTenKH.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbTenKHItemStateChanged(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Thông tin khách hàng");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSDT)
                    .addComponent(cbbTenKH, 0, 259, Short.MAX_VALUE))
                .addGap(65, 65, 65)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTenKH)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(134, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách mặt hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Tên mặt hàng");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Số lượng");

        txtSL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Đơn giá");

        txtGia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Ghi chú");

        txtGhiChu.setColumns(20);
        txtGhiChu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtGhiChu.setRows(5);
        jScrollPane1.setViewportView(txtGhiChu);

        lblDV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDV.setText("Đơn vị");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("VNĐ");

        tblHDCT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblHDCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã MH", "Tên mặt hàng", "Đơn vị", "Số lượng", "Giá", "Thành tiền", "Ghi chú"
            }
        ));
        tblHDCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHDCTMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblHDCT);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Mới");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Thêm");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("Sửa");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton4.setText("Xóa");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        cbbTenMH.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbTenMH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbTenMH.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbTenMHItemStateChanged(evt);
            }
        });

        cbbKho.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbKho.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbKho.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbKhoItemStateChanged(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Kho");

        txtTongTien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTongTien.setText("VND");

        txtTongTien1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTongTien1.setText("Tổng tiền : ");

        lblSoLuongtrongKho.setText("jLabel18");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel13)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cbbTenMH, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbbKho, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtGia, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                                .addComponent(txtSL))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblDV)
                                .addComponent(jLabel14)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE))
                    .addComponent(lblSoLuongtrongKho, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButton2)
                            .addGap(25, 25, 25)
                            .addComponent(jButton3)
                            .addGap(18, 18, 18)
                            .addComponent(jButton4)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(txtTongTien1)
                        .addGap(18, 18, 18)
                        .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(cbbKho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbbTenMH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblSoLuongtrongKho)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtSL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDV))
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel9)
                                .addGap(107, 107, 107)
                                .addComponent(jLabel12))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTongTien1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2)
                                    .addComponent(jButton3)
                                    .addComponent(jButton4))))
                        .addContainerGap())))
        );

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton5.setText("Mới");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        btnThemHD.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnThemHD.setText("Thêm");
        btnThemHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemHDActionPerformed(evt);
            }
        });

        btnSuaHD.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSuaHD.setText("Sửa");
        btnSuaHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaHDActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton8.setText("Import");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton9.setText("Export");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Trạng thái");

        buttonGroup1.add(rbT);
        rbT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbT.setText("Đã xuất");

        buttonGroup1.add(rbF);
        rbF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbF.setSelected(true);
        rbF.setText("Chưa xuất");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(jLabel1)
                                .addGap(86, 86, 86)
                                .addComponent(txtMaHDX, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(250, 250, 250)
                                .addComponent(jLabel17)
                                .addGap(18, 18, 18)
                                .addComponent(rbT)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbF))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(359, 359, 359)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(btnThemHD, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(btnSuaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 848, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addGap(18, 18, 18)
                .addComponent(jButton9)
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMaHDX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(rbT)
                    .addComponent(rbF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSuaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThemHD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        tabs.addTab("Thông tin chi tiết", jPanel1);

        txtSearchTheoNgay.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Tìm kiếm theo ngày");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Tìm theo mã hóa đơn");

        cboSearchTheoMaHD.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cboSearchTheoMaHD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboSearchTheoMaHD.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboSearchTheoMaHDItemStateChanged(evt);
            }
        });

        tblHDX.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblHDX.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã HDX", "Mã NV", "Tên khách hàng", "SĐT khách hàng", "Tên lái xe", "SĐT lái xe", "Ngày xuất", "Trạng thái"
            }
        ));
        tblHDX.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHDXMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblHDX);

        btnTimHDTheoNgay.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnTimHDTheoNgay.setText("Tìm");
        btnTimHDTheoNgay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimHDTheoNgayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSearchTheoNgay)
                    .addComponent(cboSearchTheoMaHD, 0, 279, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnTimHDTheoNgay)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1019, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchTheoNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(btnTimHDTheoNgay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(cboSearchTheoMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.addTab("Danh sách hóa đơn xuất", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblHDXMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHDXMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            this.row = tblHDX.getSelectedRow();
            this.editDanhSachHDX();

            try {
                listhdct.clear();
                listhdct = daoct.selectByMaHDX(txtMaHDX.getText());
                fillDSHoaDonChiTiet(listhdct);
            } catch (Exception e) {
                MsgBox.alert(this, "Đơn nhập không có sản phẩm");
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_tblHDXMouseClicked

    private void cbbTenKHItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbTenKHItemStateChanged
        // TODO add your handling code here:
        if (cbbTenKH.getSelectedIndex() >= 0) {
            String kh = String.valueOf(cbbTenKH.getSelectedItem());
            if (!kh.equals("...")) {
                fillInfoKH();
            } else {
                txtTenKH.setText("");
                txtSDT.setText("");
                txtDiaChi.setText("");
            }
        }
    }//GEN-LAST:event_cbbTenKHItemStateChanged

    private void tblHDCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHDCTMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            this.row = tblHDCT.getSelectedRow();
            setFormCT(listhdct.get(row));
        }
    }//GEN-LAST:event_tblHDCTMouseClicked

    private void cbbKhoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbKhoItemStateChanged
        // TODO add your handling code here:
        if (cbbKho.getSelectedIndex() >= 0) {
            loadDataToCbbMatHang();
        }
    }//GEN-LAST:event_cbbKhoItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        clearFormCT();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        clearFormHD();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        insertCT();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        updateCT();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        deleteCT();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnThemHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemHDActionPerformed
        // TODO add your handling code here:
        insertHD();
    }//GEN-LAST:event_btnThemHDActionPerformed

    private void btnSuaHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaHDActionPerformed
        // TODO add your handling code here:
        updateHD();
    }//GEN-LAST:event_btnSuaHDActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        importExcel();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        ExportExcel(createNewFile());
    }//GEN-LAST:event_jButton9ActionPerformed

    private void cbbTenMHItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbTenMHItemStateChanged
        // TODO add your handling code here:
        if (cbbTenMH.getSelectedIndex() >= 0) {
            MatHang mh = (MatHang) cbbTenMH.getSelectedItem();
            lblDV.setText(mh.getDonVi());
            txtGia.setText(String.valueOf(mh.getDonGia()));
            LoadSoLuongTheoTenMH();
        }

    }//GEN-LAST:event_cbbTenMHItemStateChanged

    private void cboSearchTheoMaHDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboSearchTheoMaHDItemStateChanged
        if (cboSearchTheoMaHD.getItemCount() > 0) {
            if (cboSearchTheoMaHD.getSelectedItem().equals("...")) {
                fillDataToTable(daohdx.selectAll());
            } else {

                List<HoaDonXuat> list = new ArrayList<>();
                list.add(daohdx.selectById(Integer.parseInt(String.valueOf(cboSearchTheoMaHD.getSelectedItem()))));
                fillDataToTable(list);
            }
        }

    }//GEN-LAST:event_cboSearchTheoMaHDItemStateChanged

    private void btnTimHDTheoNgayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimHDTheoNgayActionPerformed
        timHDNTheoNgay();
    }//GEN-LAST:event_btnTimHDTheoNgayActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSuaHD;
    private javax.swing.JButton btnThemHD;
    private javax.swing.JButton btnTimHDTheoNgay;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbbKho;
    private javax.swing.JComboBox<String> cbbTenKH;
    private javax.swing.JComboBox<String> cbbTenMH;
    private javax.swing.JComboBox<String> cboSearchTheoMaHD;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblDV;
    private javax.swing.JLabel lblSoLuongtrongKho;
    private javax.swing.JRadioButton rbF;
    private javax.swing.JRadioButton rbT;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblHDCT;
    private javax.swing.JTable tblHDX;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMaHDX;
    private javax.swing.JTextField txtNgayXuat;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtSDTLX;
    private javax.swing.JTextField txtSL;
    private javax.swing.JTextField txtSearchTheoNgay;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtTenLX;
    private javax.swing.JTextField txtTenNV;
    private javax.swing.JLabel txtTongTien;
    private javax.swing.JLabel txtTongTien1;
    // End of variables declaration//GEN-END:variables

    int row;
    HoaDonXuatDAO daohdx = new HoaDonXuatDAO();
    HoaDonXuatChiTietDAO daoct = new HoaDonXuatChiTietDAO();
    KhachHangDAO daokh = new KhachHangDAO();
    NhanVienDAO daonv = new NhanVienDAO();
    MatHangDAO daomh = new MatHangDAO();
    KhoDAO daok = new KhoDAO();

    private void inits() {
        AutoCompleteDecorator.decorate(cbbKho);
        AutoCompleteDecorator.decorate(cbbTenKH);
        AutoCompleteDecorator.decorate(cbbTenMH);
        fillDataToTable(daohdx.selectAll());
        loadDataToCbbKhachHang();
        loadDataToCbbKho();
        row = -1;
        fillCboMaHDX();
    }

    private void fillDataToTable(List<HoaDonXuat> listHDX) {
        DefaultTableModel model = (DefaultTableModel) tblHDX.getModel();
        model.setRowCount(0);
        for (HoaDonXuat hd : listHDX) {
            KhachHang kh = daokh.selectById(hd.getMaKH());
            Object[] ob = new Object[]{hd.getMaHDX(), hd.getMaNV(), kh.getTenKH(), kh.getSDT(), hd.getTenLaiXe(), hd.getSDTLaiXe(), hd.getNgayXuat(), hd.isTrangThai() ? "Đã xuất" : "Chưa xuất"};
            model.addRow(ob);
        }
    }

    private void setFormHDX(HoaDonXuat hd) {
        KhachHang kh = daokh.selectById(hd.getMaKH());
        NhanVien nv = daonv.selectById(hd.getMaNV());
        txtMaHDX.setText(String.valueOf(hd.getMaHDX()));
        txtDiaChi.setText(kh.getDiaChi());
        txtNgayXuat.setText(XDate.toString(hd.getNgayXuat(), "yyyy-MM-dd"));
        txtSDT.setText(kh.getSDT());
        txtSDTLX.setText(hd.getSDTLaiXe());
        txtTenKH.setText(kh.getTenKH());
        txtTenLX.setText(hd.getTenLaiXe());
        txtTenNV.setText(nv.getTenNV());
        rbT.setSelected(hd.isTrangThai());
        rbF.setSelected(!hd.isTrangThai());
    }

    private String AutoInsertKhachHang() {
        int id = daokh.MaxID() + 1;
        String makh = String.valueOf(id);
        while (makh.length() < 3) {
            makh = "0" + makh;
        }
        makh = "KH" + makh;
        KhachHang kh = new KhachHang();
        kh.setMaKH(makh);
        kh.setTenKH(txtTenKH.getText());
        kh.setSDT(txtSDT.getText());
        kh.setDiaChi(txtDiaChi.getText());
        daokh.insert(kh);
        loadDataToCbbKhachHang();
        cbbTenKH.setSelectedItem(kh);
        return makh;
    }

    private HoaDonXuat getFormHDX() {
        HoaDonXuat hd = new HoaDonXuat();
        hd.setMaHDX(Integer.parseInt(txtMaHDX.getText()));
        KhachHang kh = daokh.SearchKH(txtTenKH.getText(), txtSDT.getText(), txtDiaChi.getText());
        if (kh.getMaKH() == null) {
            String makh = AutoInsertKhachHang();

            hd.setMaKH(makh);
        } else {
            hd.setMaKH(kh.getMaKH());
        }

        hd.setMaNV(Auth.user.getMaNV());
        hd.setNgayXuat(new java.sql.Date(XDate.toDate(txtNgayXuat.getText(), "yyyy-MM-dd").getTime()));
        hd.setSDTLaiXe(txtSDTLX.getText());
        hd.setTenLaiXe(txtTenLX.getText());
        hd.setTrangThai(rbT.isSelected());
        return hd;
    }

    private void setFormCT(HoaDonXuatChiTiet hd) {
        Kho k = daok.selectByMaMH(hd.getMaMH());
        cbbKho.setSelectedItem(k);
        MatHang mh = daomh.selectById(hd.getMaMH());
        cbbTenMH.setSelectedItem(mh);
        txtSL.setText(String.valueOf(hd.getSoLuong()));
        txtGia.setText(String.valueOf(hd.getGiaXuat()));
        lblDV.setText(mh.getDonVi());
        txtGhiChu.setText(hd.getGhiChu());
    }

    List<HoaDonXuatChiTiet> listhdct = new ArrayList();

    private HoaDonXuatChiTiet getFormCT() {
        HoaDonXuatChiTiet hd = new HoaDonXuatChiTiet();
        int r = tblHDCT.getSelectedRow();
        if (r > -1) {
            hd.setID(listhdct.get(r).getID());
        }
        hd.setMaHDX(Integer.parseInt(txtMaHDX.getText()));
        hd.setGhiChu(txtGhiChu.getText());
        hd.setGiaXuat(Double.parseDouble(txtGia.getText()));
        MatHang mh = (MatHang) cbbTenMH.getSelectedItem();
        hd.setMaMH(mh.getMaMH());
        hd.setSoLuong(Double.parseDouble(txtSL.getText()));
        return hd;
    }

    private void editDanhSachHDX() {
        int maHDX = (int) tblHDX.getValueAt(row, 0);
        try {
            HoaDonXuat hdn = daohdx.selectById(maHDX);
            setFormHDX(hdn);
            tabs.setSelectedIndex(0);
            updateStatus();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void updateStatus() {
        boolean edit = (this.row >= 0);
        //Trạng thái form
        txtTenNV.setEditable(!edit);
        txtMaHDX.setEditable(!edit);
        btnThemHD.setEnabled(!edit);
        btnSuaHD.setEnabled(edit);
        // btnXoa.setEnabled(edit);
    }

    private void fillDSHoaDonChiTiet(List<HoaDonXuatChiTiet> listHDXCT) {
        DefaultTableModel model = (DefaultTableModel) tblHDCT.getModel();
        model.setRowCount(0);
        double tt = 0;
        for (int i = 0; i < listHDXCT.size(); i++) {
            HoaDonXuatChiTiet hd = listHDXCT.get(i);
            MatHang mh = daomh.selectById(hd.getMaMH());
            tt += hd.getGiaXuat() * hd.getSoLuong();
            Object[] ob = new Object[]{tblHDCT.getRowCount() + 1, hd.getMaMH(), mh.getTenMH(), mh.getDonVi(), hd.getSoLuong(), hd.getGiaXuat(), hd.getGiaXuat() * hd.getSoLuong(), hd.getGhiChu()};
            model.addRow(ob);
        }

        txtTongTien.setText(doiTien(tt));
    }

    private String doiTien(Object ob) {
        DecimalFormat fm = new DecimalFormat("#");
        Locale localeVN = new Locale("vi", "VN");
        NumberFormat currencyVN = NumberFormat.getCurrencyInstance(localeVN);
        return currencyVN.format(Double.parseDouble(String.valueOf(ob)));
    }

    private void loadDataToCbbKhachHang() {
        List<KhachHang> listkh = daokh.selectAll();
        DefaultComboBoxModel modelcbb = (DefaultComboBoxModel) cbbTenKH.getModel();
        modelcbb.removeAllElements();
        modelcbb.addElement("...");
        for (KhachHang kh : listkh) {
            modelcbb.addElement(kh);
        }
    }

    private void loadDataToCbbKho() {
        List<Kho> listk = daok.selectAll();
        DefaultComboBoxModel modelcbb = (DefaultComboBoxModel) cbbKho.getModel();
        modelcbb.removeAllElements();
        for (Kho kh : listk) {
            modelcbb.addElement(kh);
        }
        loadDataToCbbMatHang();

    }

    private void loadDataToCbbMatHang() {
        List<MatHang> listk = daomh.selectByMaKho(((Kho) cbbKho.getSelectedItem()).getMaKho());
        DefaultComboBoxModel modelcbb = (DefaultComboBoxModel) cbbTenMH.getModel();
        modelcbb.removeAllElements();
        for (MatHang kh : listk) {
            modelcbb.addElement(kh);
        }

    }

    private void LoadSoLuongTheoTenMH() {
        MatHang mh2 = (MatHang) cbbTenMH.getSelectedItem();
        lblDV.setText(mh2.getDonVi());
        MatHang mh = daomh.selectById(mh2.getMaMH());
        double sl = mh.getSoLuong();
        lblSoLuongtrongKho.setText("Số lượng còn: " + sl + " " + mh2.getDonVi());
    }

    private void fillInfoKH() {
        KhachHang kh = (KhachHang) cbbTenKH.getSelectedItem();
        txtTenKH.setText(kh.getTenKH());
        txtSDT.setText(kh.getSDT());
        txtDiaChi.setText(kh.getDiaChi());
    }

    private void clearFormCT() {
        cbbKho.setSelectedIndex(0);
        cbbTenMH.setSelectedIndex(0);
        txtSL.setText("");
        txtGia.setText("");
        txtGhiChu.setText("");
        lblDV.setText("Đơn vị");

    }

    private void clearFormHD() {
        txtMaHDX.setText(String.valueOf(daohdx.MaxMaHDN() + 1));
        txtTenNV.setText(Auth.user.getTenNV());
        txtNgayXuat.setText(XDate.toString(XDate.now(), "yyyy-MM-dd"));
        txtTenKH.setText("");
        txtSDT.setText("");
        txtDiaChi.setText("");
        txtTenLX.setText("");
        txtSDTLX.setText("");
        DefaultTableModel model = (DefaultTableModel) tblHDCT.getModel();
        model.setRowCount(0);
        clearFormCT();
        listhdct.clear();
    }

    private void insertListCTtoDB() {
        for (HoaDonXuatChiTiet hd : listhdct) {
            daoct.insert(hd);
            updateSLMatHang(daomh.selectById(hd.getMaMH()));
        }
    }

    private void insertCT() {
        String err = check("Them");
        if (err.equals("")) {
            HoaDonXuat hd = daohdx.selectById(Integer.parseInt(txtMaHDX.getText()));
            listhdct.add(getFormCT());
            if (hd != null) {
                daoct.insert(getFormCT());
                listhdct = daoct.selectByMaHDX(String.valueOf(hd.getMaHDX()));
                updateSLMatHang(daomh.selectById(listhdct.get(listhdct.size() - 1).getMaMH()));
                LoadSoLuongTheoTenMH();
            }
            fillDSHoaDonChiTiet(listhdct);
        } else {
            MsgBox.alert(this, err);
        }
    }

    private void updateCT() {
        String err = check("Them");
        if (err.equals("")) {
            HoaDonXuat hd = daohdx.selectById(Integer.parseInt(txtMaHDX.getText()));
            int r = tblHDCT.getSelectedRow();
            if (r >= 0) {
                listhdct.add(r, getFormCT());
                listhdct.remove(r + 1);
                if (hd != null) {
                    daoct.update(listhdct.get(r));
                    updateSLMatHang(daomh.selectById(listhdct.get(r).getMaMH()));
                    LoadSoLuongTheoTenMH();
                    
                }
                fillDSHoaDonChiTiet(listhdct);
            } else {
                MsgBox.alert(this, "Chưa chọn mặt hàng để sửa");
            }
        } else {
            MsgBox.alert(this, err);
        }
    }

    private void deleteCT() {
        HoaDonXuat hd = daohdx.selectById(Integer.parseInt(txtMaHDX.getText()));
        int r = tblHDCT.getSelectedRow();
        if (r >= 0) {
            if (hd != null) {
                daoct.delete(listhdct.get(r).getID());
                updateSLMatHang(daomh.selectById(listhdct.get(r).getMaMH()));
                LoadSoLuongTheoTenMH();
            }
            listhdct.remove(r);
            fillDSHoaDonChiTiet(listhdct);
        } else {
            MsgBox.alert(this, "Chưa chọn mặt hàng để xóa");
        }
    }

    private void insertHD() {
        String err = checkALL("Them");
        if (err.equals("")) {
            if (tblHDCT.getRowCount() > 0) {
                daohdx.insert(getFormHDX());
                insertListCTtoDB();
                fillDataToTable(daohdx.selectAll());
//                TongSLMatHang();
                MsgBox.alert(this, "Thêm mới thành công");
                clearFormHD();
            } else {
                MsgBox.alert(this, "Chưa có mặt hàng trong hóa đơn");
            }
        } else {
            MsgBox.alert(this, err);
        }
    }

    private void updateHD() {
        String err = checkALL("Sua");
        if (err.equals("")) {
            HoaDonXuat kh = getFormHDX();
            daohdx.update(kh);
            fillDataToTable(daohdx.selectAll());
//            TongSLMatHang();
            MsgBox.alert(this, "Sửa hóa đơn thành công");
        } else {
            MsgBox.alert(this, err);
        }
    }

    private void updateMatHang() {

    }
//    private void TongSLMatHang() {
//        String mamh = "";
//        double tongsl = 0;
//        List<MatHang> listmh = daomh.selectAll();
//        List<HoaDonXuatChiTiet> listHDXCT = daoct.selectAll();
//        for (HoaDonXuatChiTiet hdx : listHDXCT) {
//            String MaMH = hdx.getMaMH();
//            for (MatHang mh : listmh) {
//                mamh = mh.getMaMH();
//                tongsl = mh.getSoLuong();
//                if (MaMH.equalsIgnoreCase(mamh)) {
//                    List<HoaDonXuatChiTiet> lstCT = daoct.selectByMatHangXuatCTiet(MaMH);
//                    for (HoaDonXuatChiTiet hoaDonXuatChiTiet : lstCT) {
//                        tongsl = tongsl - hoaDonXuatChiTiet.getSoLuong();
//                    }
//                    mh.setSoLuong(tongsl);
//                    daomh.update2(mh);
//                }
//            }
//        }
//    }

    private File createNewFile() {
        String date = XDate.toString(XDate.now(), "yyyy-MM-dd");
        String fn = "HDX_" + txtMaHDX.getText() + "_" + date + ".xlsx";
        File excelExport = new File("C:\\Users\\ADMIN\\Desktop\\ReportHDX\\" + fn);
        File exportEx = new File("C:\\Users\\ADMIN\\Desktop\\ReportHDX\\ExportMauHDX.xlsx");
        try {
            WFile.copyFile(exportEx, excelExport);
            return excelExport;
        } catch (IOException ex) {
            throw new RuntimeException();
        }
    }

    private void ExportExcel(File file) {
        FileOutputStream fos = null;
        BufferedOutputStream bou = null;
        XSSFWorkbook excelJtableExport = null;
        DefaultTableModel model = (DefaultTableModel) tblHDCT.getModel();
        try {
            XSSFRow excelRow;
            XSSFCell excelCell = null;
            try {
                excelJtableExport = new XSSFWorkbook(file);
            } catch (InvalidFormatException ex) {
                ex.printStackTrace();
            }

            XSSFSheet excelSheet = excelJtableExport.getSheet("Sheet1");
            excelRow = excelSheet.createRow(10);
            Cell cel = excelRow.createCell(0);
            cel.setCellValue("STT");
            cel = excelRow.createCell(1);
            cel.setCellValue("Mã MH");
            cel = excelRow.createCell(2);
            cel.setCellValue("Tên mặt hàng");
            cel = excelRow.createCell(3);
            cel.setCellValue("DVT");
            cel = excelRow.createCell(4);
            cel.setCellValue("Số lượng");
            cel = excelRow.createCell(5);
            cel.setCellValue("Giá");
            cel = excelRow.createCell(6);
            cel.setCellValue("Thành tiền");
            cel = excelRow.createCell(7);
            cel.setCellValue("Ghi chú");

            for (int i = 0; i < model.getRowCount(); i++) {
                int currentRow = i + 11;
                excelRow = excelSheet.createRow(currentRow);
                for (int j = 0; j < model.getColumnCount(); j++) {
                    excelCell = excelRow.createCell(j);
                    if (model.getValueAt(i, j) != null) {
                        excelCell.setCellValue(model.getValueAt(i, j).toString());
                    }

                }
            }

            excelRow = excelSheet.getRow(4);
            excelCell = excelRow.createCell(2);
            excelCell.setCellValue(txtMaHDX.getText());

            excelCell = excelRow.createCell(7);
            excelCell.setCellValue(txtNgayXuat.getText());

            excelRow = excelSheet.getRow(5);
            excelCell = excelRow.createCell(2);
            excelCell.setCellValue(txtTenNV.getText());
            excelCell = excelRow.createCell(4);
            excelCell.setCellValue(txtTenLX.getText());
            excelCell = excelRow.createCell(7);
            excelCell.setCellValue(txtSDTLX.getText());

            excelRow = excelSheet.getRow(6);
            excelCell = excelRow.createCell(2);
            excelCell.setCellValue(txtTenKH.getText());

            excelRow = excelSheet.getRow(7);
            excelCell = excelRow.createCell(2);
            excelCell.setCellValue(txtSDT.getText());

            excelRow = excelSheet.getRow(8);
            excelCell = excelRow.createCell(2);
            excelCell.setCellValue(txtDiaChi.getText());

            excelRow = excelSheet.createRow(model.getRowCount() + 12);
            excelCell = excelRow.createCell(5);
            excelCell.setCellValue("Tổng tiền");

            excelCell = excelRow.createCell(6);
            excelCell.setCellValue(txtTongTien.getText());

            fos = new FileOutputStream(file.getName());
            bou = new BufferedOutputStream(fos);
            excelJtableExport.write(bou);

            MsgBox.alert(this, "Export ok");
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } catch (IOException ex) {
            Logger.getLogger(HoaDonNhap.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                if (bou != null) {
                    bou.close();
                }
                if (fos != null) {
                    fos.close();
                }
                if (excelJtableExport != null) {
                    excelJtableExport.close();
                }

            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }

    }

    private void importExcel() {
        DefaultTableModel model = (DefaultTableModel) tblHDCT.getModel();
        model.setRowCount(0);

        FileInputStream excelFIS = null;
        BufferedInputStream excelBIS = null;
        XSSFWorkbook excelImportWoorkBook = null;

        String currentDirectoryPath = "C:\\Users\\ADMIN\\Desktop\\ReportHDX\\";
        JFileChooser excelfileImport = new JFileChooser(currentDirectoryPath);

        FileNameExtensionFilter excelFilter = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xslm");
        excelfileImport.setFileFilter(excelFilter);
        int excelChooser = excelfileImport.showOpenDialog(this);
        if (excelChooser == JFileChooser.APPROVE_OPTION) {

            try {
                File excelFile = excelfileImport.getSelectedFile();
                excelFIS = new FileInputStream(excelFile);
                excelBIS = new BufferedInputStream(excelFIS);
                excelImportWoorkBook = new XSSFWorkbook(excelBIS);
                XSSFSheet excelSheet = excelImportWoorkBook.getSheetAt(0);

                for (int i = 11; i < excelSheet.getLastRowNum() - 1; i++) {
                    XSSFRow excelRow = excelSheet.getRow(i);
                    XSSFCell cell0 = excelRow.getCell(0);
                    XSSFCell cell1 = excelRow.getCell(1);
                    XSSFCell cell2 = excelRow.getCell(2);
                    XSSFCell cell3 = excelRow.getCell(3);
                    XSSFCell cell4 = excelRow.getCell(4);
                    XSSFCell cell5 = excelRow.getCell(5);
                    XSSFCell cell6 = excelRow.getCell(6);
                    XSSFCell cell7 = excelRow.getCell(7);
                    String MaMH = cell1 + "";
                    String TenMH = cell2 + "";
                    String DVT = cell3 + "";
                    double SL = Double.parseDouble(cell4 + "");
                    double gia = Double.parseDouble(cell5 + "");
                    String ghiChu = cell6 + "";
                    HoaDonXuatChiTiet hdct = new HoaDonXuatChiTiet();
                    hdct.setMaHDX(Integer.parseInt(txtMaHDX.getText()));
                    hdct.setMaMH(MaMH);
                    hdct.setSoLuong(SL);
                    hdct.setGiaXuat(gia);
                    hdct.setGhiChu(ghiChu);
                    listhdct.add(hdct);

                    model.addRow(new Object[]{cell0, cell1, cell2, cell3, cell4, cell5, cell6, cell7});
                }

                MsgBox.alert(this, "Import thành công");
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
                // Logger.getLogger(ImportDataExcel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }

    }

    private void fillCboMaHDX() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboSearchTheoMaHD.getModel();
        model.removeAllElements();
        List<HoaDonXuat> listHDX = daohdx.selectAll();
        model.addElement("...");
        for (HoaDonXuat HDX : listHDX) {
            int maHD = HDX.getMaHDX();
            model.addElement(maHD);
        }
    }

    private void timHDNTheoNgay() {
        String ktDate = "^\\d{4}-\\d{2}-\\d{2}$";
        String dateText = txtSearchTheoNgay.getText();
        if (txtSearchTheoNgay.getText().equals("")) {
            MsgBox.alert(this, "Bạn chưa nhập ngày!");
        } else if (!dateText.matches(ktDate)) {
            MsgBox.alert(this, "Nhập sai định dạng ngày (yyyy-mm-dd)");
        } else {
            DefaultTableModel model = (DefaultTableModel) tblHDX.getModel();
            model.setRowCount(0);
            java.util.Date utilDate = XDate.toDate(txtSearchTheoNgay.getText(), "yyyy-MM-dd");
            Date a = new java.sql.Date(utilDate.getTime());

            List<HoaDonXuat> list = daohdx.selectByNgayNhap(a);
            fillDataToTable(list);
//            for (HoaDonXuat nn : list) {
//                
//                KhachHang kh=daokh.selectById(nn.getMaKH());
//                String tenKh=kh.getTenKH();
//                String sdt=kh.getSDT();
//                model.addRow(new Object[]{nn.getMaHDX(), nn.getMaNV(), tenKh,sdt, nn.getTenLaiXe(), nn.getSDTLaiXe(), nn.getNgayXuat(),nn.isTrangThai()});
//            }
        }
    }

    private String check(String btn) {
        String err = "";
        if (CheckData.isNull(txtSL.getText())) {
            err += "Số lượng không được để trống\n";
        } else {
            if (!CheckData.isDouble(txtSL.getText())) {
                err += "Số lượng sai định dạng\n";
            } else {
                String tenMH = cbbTenMH.getSelectedItem() + "";
                MatHang mh = daomh.selectMaMH(tenMH);
                double sl = mh.getSoLuong();
                if (Double.parseDouble(txtSL.getText()) > sl) {
                    err += "Số lượng không được lớn hơn số lượng còn trong kho\n";
                }
            }
        }
        if (CheckData.isNull(txtGia.getText())) {
            err += "Giá không được để trống\n";
        } else {
            if (!CheckData.isDouble(txtGia.getText())) {
                err += "Giá sai định dạng\n";
            }
        }

        return err;
    }

    private String checkALL(String btn) {
        String err = "";
        if (CheckData.isNull(txtTenLX.getText())) {
            err += "Tên lái không được để trống\n";
        }
        if (CheckData.isNull(txtSDTLX.getText())) {
            err += "SĐT lái xe không được để trống\n";
        } else {
            if (!CheckData.sdt(txtSDTLX.getText())) {
                err += "SĐT lái xe sai định dạng\n";
            }
        }
        if (CheckData.isNull(txtTenKH.getText())) {
            err += "Tên khách hàng không được để trống \n";
        }
        if (CheckData.isNull(txtSDT.getText())) {
            err += "SĐT khách hàng không được để trống\n";
        } else {
            if (!CheckData.sdt(txtSDT.getText())) {
                err += "SĐT khách hàng sai định dạng\n";
            }
        }
        if (CheckData.isNull(txtDiaChi.getText())) {
            err += "Địa chỉ  không được để trống\n";
        }

        return err;
    }

    private void updateSLMatHang(MatHang mh) {
        HoaDonXuat hdn = daohdx.selectById(Integer.parseInt(txtMaHDX.getText()));
        if (hdn != null) {
            mh.setSoLuong(daomh.selectTongMH(mh.getMaMH()));
            daomh.updateSL(mh);
        }
    }
}
