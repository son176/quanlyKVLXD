/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.kvlxd.ui;

import com.kvlxd.entity.KiemKe;
import com.kvlxd.dao.KeHangDAO;
import com.kvlxd.dao.KhoDAO;
import com.kvlxd.dao.KiemKeDAO;
import com.kvlxd.dao.MatHangDAO;
import com.kvlxd.entity.Kho;
import com.kvlxd.util.MsgBox;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import com.kvlxd.entity.KeHang;
import com.kvlxd.entity.MatHang;
import com.kvlxd.util.Auth;
import com.kvlxd.util.CheckData;
import com.kvlxd.util.XDate;
import java.text.SimpleDateFormat;
import java.util.Date;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Admin
 */
public class KiemKeJDialog extends javax.swing.JInternalFrame {

    KiemKeDAO kkDao = new KiemKeDAO();
    KhoDAO khoDAO = new KhoDAO();
    KeHangDAO keDAO = new KeHangDAO();
    MatHangDAO mhDao = new MatHangDAO();
    int row = -1;
    DefaultTableModel model;

    public KiemKeJDialog() {
        initComponents();
        inits();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNgay = new javax.swing.JTextField();
        txtSLKK = new javax.swing.JTextField();
        txtSLHong = new javax.swing.JTextField();
        btnMoi = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cboKho = new javax.swing.JComboBox<>();
        cboTenMH = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbKiemKe = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txtNgayDau = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNgayCuoi = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        tabs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Tên mặt hàng:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Ngày kiểm kê:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Số lượng kiểm kê:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Số lượng hỏng:");

        btnMoi.setText("Mới ");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Kho");

        cboKho.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboKho.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboKhoItemStateChanged(evt);
            }
        });

        cboTenMH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboTenMH.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTenMHItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))
                        .addGap(111, 111, 111)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cboTenMH, 0, 257, Short.MAX_VALUE)
                            .addComponent(cboKho, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(97, 97, 97)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNgay)
                            .addComponent(txtSLKK)
                            .addComponent(txtSLHong, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE))))
                .addGap(84, 84, 84)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMoi)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnXoa))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnMoi, btnSua, btnThem, btnXoa});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cboKho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnMoi)
                        .addGap(32, 32, 32)
                        .addComponent(btnThem)
                        .addGap(29, 29, 29)
                        .addComponent(btnSua)
                        .addGap(32, 32, 32)
                        .addComponent(btnXoa))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cboTenMH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtSLKK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtSLHong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        tabs.addTab("Thông tin chi tiết", jPanel1);

        tbKiemKe.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbKiemKe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã mặt hàng", "Ngày kiểm kê", "Số lượng kiểm kê", "Số lượng hỏng"
            }
        ));
        tbKiemKe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbKiemKeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbKiemKe);

        jLabel6.setText("Ngày bắt đầu");

        jLabel7.setText("Ngày cuối");

        jButton1.setText("Tìm kiếm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNgayDau, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNgayCuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(31, 31, 31))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtNgayDau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtNgayCuoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE))
        );

        tabs.addTab("Danh sách kiểm kê", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 719, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tbKiemKeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbKiemKeMouseClicked
        row = tbKiemKe.getSelectedRow();
        this.edit();
    }//GEN-LAST:event_tbKiemKeMouseClicked

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        clearForm();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        insertKiemKe();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        updateKiemke();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void cboKhoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboKhoItemStateChanged
        if (cboKho.getSelectedIndex() >= 0) {
            editMatHang();
        }

    }//GEN-LAST:event_cboKhoItemStateChanged

    private void cboTenMHItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTenMHItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTenMHItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (CheckData.checkNgay(txtNgayDau.getText()) && CheckData.checkNgay(txtNgayCuoi.getText())) {
            if (!CheckData.isNull(txtNgayDau.getText())) {
                if (!CheckData.isNull(txtNgayCuoi.getText())) {
                    fillTable(kkDao.selectByKhoangNgay(java.sql.Date.valueOf(txtNgayDau.getText()), java.sql.Date.valueOf(txtNgayCuoi.getText())));
                } else {
                    fillTable(kkDao.selectByKhoangNgay(java.sql.Date.valueOf(txtNgayDau.getText()), java.sql.Date.valueOf(XDate.toString(XDate.now(), "yyyy-MM-dd"))));
                }
            } else {
                fillTable(kkDao.selectByKhoangNgay(java.sql.Date.valueOf("1900-01-01"), java.sql.Date.valueOf(txtNgayCuoi.getText())));
            }
        }else{
            MsgBox.alert(this, "Bạn phải nhập định dạng ngày là yyyy-MM-dd");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboKho;
    private javax.swing.JComboBox<String> cboTenMH;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tbKiemKe;
    private javax.swing.JTextField txtNgay;
    private javax.swing.JTextField txtNgayCuoi;
    private javax.swing.JTextField txtNgayDau;
    private javax.swing.JTextField txtSLHong;
    private javax.swing.JTextField txtSLKK;
    // End of variables declaration//GEN-END:variables

    private void inits() {
        AutoCompleteDecorator.decorate(cboKho);
        AutoCompleteDecorator.decorate(cboTenMH);
        this.fillTable(kkDao.selectAll());
        this.row = -1;
        tabs.setSelectedIndex(1);
        this.fillCBkho();
        this.fillCBTenMH();
        this.editMatHang();
    }

    private void fillTable(List<KiemKe> list) {
        DefaultTableModel model = (DefaultTableModel) tbKiemKe.getModel();
        model.setRowCount(0);
        try {
            for (KiemKe k : list) {
                Object[] row = {k.getMaMH(), k.getNgayKiemKe(), k.getSLKiemKe(), k.getSLHong()};
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lõi truy vấn dữ liệu");
        }
    }

    private void edit() {
        try {
            String maMH = (String) tbKiemKe.getValueAt(row, 0);
            Date ngay = (Date) tbKiemKe.getValueAt(row, 1);
            KiemKe kiemKe = kkDao.selectByIdANDdate(maMH, ngay);
            setForm(kiemKe);
            tabs.setSelectedIndex(0);
            cboTenMH.setEnabled(false);
            txtNgay.setEnabled(false);
            btnThem.setEnabled(false);
            btnSua.setEnabled(true);
            btnXoa.setEnabled(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setForm(KiemKe kiemKe) {
        MatHang mh = mhDao.selectById(kiemKe.getMaMH());
        Kho tenkho = khoDAO.selectByTENKHO(mh.getTenMH());
        cboKho.setSelectedItem(tenkho);
        cboTenMH.setSelectedItem(mh);
        txtSLHong.setText(String.valueOf(kiemKe.getSLHong()));
        txtSLKK.setText(String.valueOf(kiemKe.getSLKiemKe()));
        txtNgay.setText(XDate.toString(kiemKe.getNgayKiemKe(), "yyyy-MM-dd"));

    }

    private void fillCBkho() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboKho.getModel();
        model.removeAllElements();
        List<Kho> list = khoDAO.selectAll();
        if (list.isEmpty()) {
            return;
        } else {
            for (Kho tt : list) {
                model.addElement(tt);
            }
        }
    }

    private void fillCBTenMH() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboTenMH.getModel();
        model.removeAllElements();
        List<MatHang> list = mhDao.selectAll();
        if (list.isEmpty()) {
            return;
        } else {
            for (MatHang mh : list) {
                model.addElement(mh);
            }
        }

    }

    private void clearForm() {
        cboKho.setSelectedIndex(0);
        cboTenMH.setSelectedIndex(0);
        txtNgay.setText("");
        txtSLHong.setText("");
        txtSLKK.setText("");
        row = -1;
        cboTenMH.setEnabled(true);
        txtNgay.setEnabled(true);
        btnThem.setEnabled(true);
    }

    private void insertKiemKe() {
        String err = check("Them");
        if (err.equals("")) {
            KiemKe kk = getForm();
            try {
                kkDao.insert(kk);
                fillTable(kkDao.selectAll());
                MsgBox.alert(this, "Thêm thành công");
            } catch (Exception e) {
                e.printStackTrace();
                MsgBox.alert(this, "Thêm thất bại");
            }
        } else {
            MsgBox.alert(this, err);
        }

    }

    private KiemKe getForm() {
        KiemKe kk = new KiemKe();
        MatHang mh = (MatHang) cboTenMH.getSelectedItem();
        kk.setMaMH(mh.getMaMH());
        java.sql.Date a = java.sql.Date.valueOf(txtNgay.getText());
        kk.setNgayKiemKe(a);
        kk.setSLHong(Double.parseDouble(txtSLHong.getText()));
        kk.setSLKiemKe(Double.parseDouble(txtSLKK.getText()));
        return kk;
    }

    private void updateKiemke() {
        String err = check("Sua");
        if (err.equals("")) {
            KiemKe tt = getForm();
            try {
                kkDao.update(tt);
                this.fillTable(kkDao.selectAll());
                MsgBox.alert(this, "Sửa thành công");
            } catch (Exception e) {
                e.printStackTrace();
                MsgBox.alert(this, "Sửa thất bại!");
            }
        } else {
            MsgBox.alert(this, err);
        }

    }

    private void delete() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyển xóa");
        } else {
            MatHang tt = (MatHang) cboTenMH.getSelectedItem();
            java.sql.Date date = java.sql.Date.valueOf(txtNgay.getText());
            if (MsgBox.confirm(this, "Bạn có muốn xóa ")) {
                try {
                    kkDao.deleteKK(tt.getMaMH(), date);
                    MsgBox.alert(this, "Xóa thành công");
                } catch (Exception e) {
                    MsgBox.alert(this, "Xóa thất bại");
                    e.printStackTrace();
                }
            }
            fillTable(kkDao.selectAll());
            clearForm();
            btnSua.setEnabled(false);
            btnXoa.setEnabled(false);
        }

    }

    private void editMatHang() {
        Kho kho = (Kho) cboKho.getSelectedItem();
        List<MatHang> listmathang = mhDao.selectByMaKho(kho.getMaKho());
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboTenMH.getModel();
        cboTenMH.removeAllItems();
        for (MatHang mh : listmathang) {
            model.addElement(mh);
        }
    }

    private String check(String btn) {
        String err = "";
        if (CheckData.isNull(txtNgay.getText())) {
            err += "Ngày kiểm kê không được để trống\n";
        } else {
            if (!CheckData.checkNgay(txtNgay.getText())) {
                err += "Ngày sai định dạng\n";
            }
        }
        if (CheckData.isNull(txtSLHong.getText())) {
            err += "Số lượng hỏng không được để trống\n";
        } else {
            if (!CheckData.isDouble(txtSLHong.getText())) {
                err += "Số lượng sai định dạng\n";
            }
        }
        if (CheckData.isNull(txtSLKK.getText())) {
            err += "Số lượng Kiểm Kê không được để trống\n";
        } else {
            if (!CheckData.isDouble(txtSLKK.getText())) {
                err += "Số lượng Kiểm Kê sai định dạng\n";
            }
        }

        return err;
    }
}
