/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.kvlxd.ui;

import com.kvlxd.dao.MatHangDAO;
import com.kvlxd.dao.ThuocTinhCTDao;
import com.kvlxd.dao.ThuocTinhDao;
import com.kvlxd.entity.LoaiHang;
import com.kvlxd.entity.MatHang;
import com.kvlxd.entity.ThuocTinh;
import com.kvlxd.entity.ThuocTinhChiTiet;
import com.kvlxd.util.Auth;
import com.kvlxd.util.CheckData;
import com.kvlxd.util.MsgBox;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Admin
 */
public class ThuocTinhJDialog extends javax.swing.JInternalFrame {

    ThuocTinhDao ttdao = new ThuocTinhDao();
    ThuocTinhCTDao ctdao = new ThuocTinhCTDao();
    MatHangDAO mhdao = new MatHangDAO();
    int row = -1;
    DefaultTableModel model;

    public ThuocTinhJDialog(MatHang mh) {
        initComponents();
        inits(mh);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtTenTT = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnSua = new javax.swing.JButton();
        bntMoi = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        taMoTa = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtGiaTri = new javax.swing.JTextField();
        cbTenTTCT = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbThuocTinhCT = new javax.swing.JTable();
        btnMoiC = new javax.swing.JButton();
        btnThemC = new javax.swing.JButton();
        btnSuaC = new javax.swing.JButton();
        btnXoaC = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cbTenMatHang = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        cbChonTT = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbThuocTinh = new javax.swing.JTable();

        tabs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thuộc tính", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N

        btnThem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Tên thuộc tính:");

        txtTenTT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Mô tả:");

        btnSua.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        bntMoi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bntMoi.setText("Mới");
        bntMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntMoiActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        taMoTa.setColumns(20);
        taMoTa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        taMoTa.setRows(5);
        jScrollPane3.setViewportView(taMoTa);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thuộc tính chi tiết", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Tên thuộc tính:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Giá trị:");

        txtGiaTri.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtGiaTri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGiaTriActionPerformed(evt);
            }
        });

        cbTenTTCT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbTenTTCT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbTenTTCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTenTTCTActionPerformed(evt);
            }
        });

        tbThuocTinhCT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbThuocTinhCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên", "TT1", "TT2", "TT3"
            }
        ));
        tbThuocTinhCT.setColumnSelectionAllowed(true);
        tbThuocTinhCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbThuocTinhCTMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbThuocTinhCT);
        tbThuocTinhCT.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btnMoiC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnMoiC.setText("Mới");
        btnMoiC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiCActionPerformed(evt);
            }
        });

        btnThemC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnThemC.setText("Thêm");
        btnThemC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemCActionPerformed(evt);
            }
        });

        btnSuaC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSuaC.setText("Sửa");
        btnSuaC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaCActionPerformed(evt);
            }
        });

        btnXoaC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnXoaC.setText("Xóa");
        btnXoaC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaCActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Tên mặt hàng:");

        cbTenMatHang.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbTenMatHang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbTenMatHang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTenMatHangItemStateChanged(evt);
            }
        });
        cbTenMatHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTenMatHangActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Thoát");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(188, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(71, 71, 71)
                .addComponent(cbTenMatHang, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(257, 257, 257))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtGiaTri)
                            .addComponent(cbTenTTCT, 0, 276, Short.MAX_VALUE))
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(btnMoiC, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(btnThemC)
                        .addGap(31, 31, 31)
                        .addComponent(btnSuaC, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoaC, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTenMatHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cbTenTTCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtGiaTri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMoiC, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThemC, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSuaC, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoaC, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        cbChonTT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbChonTT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbChonTT.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbChonTTItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Chọn Thuộc tính:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addGap(84, 84, 84)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbChonTT, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                    .addComponent(txtTenTT))
                .addGap(106, 106, 106)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bntMoi)
                    .addComponent(btnThem)
                    .addComponent(btnXoa)
                    .addComponent(btnSua))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {bntMoi, btnSua, btnThem, btnXoa});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbChonTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTenTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(bntMoi)
                        .addGap(18, 18, 18)
                        .addComponent(btnThem)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tabs.addTab("Thông tin chi tiết", jPanel1);

        tbThuocTinh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã thuộc tính", "Tên thuộc tính", "Mô tả"
            }
        ));
        tbThuocTinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbThuocTinhMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbThuocTinh);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 948, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
        );

        tabs.addTab("Danh sách thuộc tính", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 41, Short.MAX_VALUE)
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        insertThuocTinh();
        fillCBTenTTCT();
    }//GEN-LAST:event_btnThemActionPerformed

    private void txtGiaTriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGiaTriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGiaTriActionPerformed

    private void tbThuocTinhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbThuocTinhMouseClicked

        this.edit();
    }//GEN-LAST:event_tbThuocTinhMouseClicked

    private void cbTenMatHangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTenMatHangItemStateChanged

        if (cbTenMatHang.getSelectedIndex() != -1) {
            HeaderTableModel1();

        }

    }//GEN-LAST:event_cbTenMatHangItemStateChanged

    private void bntMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntMoiActionPerformed
        clearForm();
        cbChonTT.setEnabled(false);
    }//GEN-LAST:event_bntMoiActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        updateTT();
        fillCBTenTTCT();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void cbChonTTItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbChonTTItemStateChanged

        if (cbChonTT.getSelectedIndex() != -1) {
            setForm2();

        }

    }//GEN-LAST:event_cbChonTTItemStateChanged

    private void cbTenMatHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTenMatHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTenMatHangActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        deleteTT();
        fillCBTenTTCT();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void cbTenTTCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTenTTCTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTenTTCTActionPerformed

    private void btnMoiCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiCActionPerformed
        clearFormCT();
    }//GEN-LAST:event_btnMoiCActionPerformed

    private void btnThemCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemCActionPerformed
        insertTTCT();
    }//GEN-LAST:event_btnThemCActionPerformed

    private void btnXoaCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaCActionPerformed
        deleteTTCT();
    }//GEN-LAST:event_btnXoaCActionPerformed

    private void tbThuocTinhCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbThuocTinhCTMouseClicked
        editTTCT();
    }//GEN-LAST:event_tbThuocTinhCTMouseClicked

    private void btnSuaCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaCActionPerformed
        updateTTCT();
    }//GEN-LAST:event_btnSuaCActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntMoi;
    private javax.swing.JButton btnMoiC;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnSuaC;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemC;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaC;
    private javax.swing.JComboBox<String> cbChonTT;
    private javax.swing.JComboBox<String> cbTenMatHang;
    private javax.swing.JComboBox<String> cbTenTTCT;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea taMoTa;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tbThuocTinh;
    private javax.swing.JTable tbThuocTinhCT;
    private javax.swing.JTextField txtGiaTri;
    private javax.swing.JTextField txtTenTT;
    // End of variables declaration//GEN-END:variables

    private void inits(MatHang mh) {
        AutoCompleteDecorator.decorate(cbTenTTCT);
        AutoCompleteDecorator.decorate(cbTenMatHang);
        AutoCompleteDecorator.decorate(cbChonTT);
        this.fillHearderToTable();
        this.row = -1;
        tabs.setSelectedIndex(0);
        this.fillCBTenMH();
        this.fillCBTenTT();
        this.fillCBTenTTCT();
        HeaderTableModel1();
        cbTenMatHang.setSelectedItem(mh);
    }

    List<String> listMaMH;
    List<String> listTenTT;
    List<ThuocTinh> listTT;
    List<String> listCT;
    List<ThuocTinhChiTiet> listThuocTinhChiTiets;

    private void fillHearderToTable() {

        listMaMH = ctdao.AllMaMH();
        listTenTT = ttdao.AllTenTT();
        listTT = ttdao.selectAll();
        String healder[] = HeaderTableModel();
        String[][] data = null;
        model = new DefaultTableModel(data, healder);
        for (int i = 0; i < listMaMH.size(); i++) {

            model.addRow(RowTableModel(listMaMH.get(i)));
        }
        tbThuocTinh.setModel(model);
    }

    public String[] HeaderTableModel() {
        String headers[] = new String[listTenTT.size() + 1];
        headers[0] = "Tên mặt hàng";
        for (int i = 0; i < listTenTT.size(); i++) {
            headers[i + 1] = listTenTT.get(i);
        }
        String data[][] = null;
        return headers;
    }

    public Object[] RowTableModel(String maMH) {
        Object[] ob = new Object[listTenTT.size() + 1];
        List<ThuocTinhChiTiet> list = ctdao.TTCTTheoMaMH(maMH);
        String tenMH = mhdao.selectById(maMH).getTenMH();
        ob[0] = tenMH;
        for (ThuocTinhChiTiet ct : list) {
            for (int i = 0; i < listTT.size(); i++) {
                if (listTT.get(i).getMaTT() == ct.getMaTT()) {
                    ob[i + 1] = ct.getGiaTri();
                }
            }
        }
        return ob;
    }

    private void edit() {
        tabs.setSelectedIndex(0);
    }

    private void setForm(ThuocTinh thuocTinh) {
        txtTenTT.setText(thuocTinh.getTenTT());
        taMoTa.setText((thuocTinh.getMota()));
    }

    private void fillCBTenMH() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbTenMatHang.getModel();
        model.removeAllElements();
        List<MatHang> list = mhdao.selectAll();
        for (MatHang mh : list) {
            model.addElement(mh);
        }
    }

    private void clearForm() {
        ThuocTinh tt = new ThuocTinh();
        row = -1;
        setForm(tt);
        btnSua.setEnabled(false);
        btnThem.setEnabled(true);

    }

    private void insertThuocTinh() {
        String err = check("Them");
        if (err.equals("")) {
            ThuocTinh tt = getForm();
            try {
                ttdao.insert(tt);
                this.fillCBTenTT();
                MsgBox.alert(this, "Thêm thành công");
                cbChonTT.setEnabled(true);
            } catch (Exception e) {
                e.printStackTrace();
                MsgBox.alert(this, "Thêm thất bại!");
            }
            fillHearderToTable();
        } else {
            MsgBox.alert(this, err);
        }
    }

    private ThuocTinh getForm() {
        ThuocTinh tt = new ThuocTinh();
        tt.setTenTT(txtTenTT.getText());
        tt.setMota(taMoTa.getText());
        return tt;
    }

    private void updateTT() {
        String err = check("Sua");
        if (err.equals("")) {
            ThuocTinh tt = getForm2();
            try {
                ttdao.update(tt);
                this.fillCBTenTT();
                MsgBox.alert(this, "Sửa thành công");
            } catch (Exception e) {
                e.printStackTrace();
                MsgBox.alert(this, "Sửa thất bại!");
            }
            fillHearderToTable();
        } else {
            MsgBox.alert(this, err);
        }
    }

    private void deleteTT() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyển xóa");
        } else {
            ThuocTinh tt = (ThuocTinh) cbChonTT.getSelectedItem();
            int matt = tt.getMaTT();
            if (MsgBox.confirm(this, "Bạn có muốn xóa thuộc tính này")) {
                ThuocTinhChiTiet ct = ctdao.selectById(matt);
                if (ct == null) {
                    try {
                        ttdao.delete(matt);
                        fillHearderToTable();
                        fillCBTenTT();
                        clearForm();
                        MsgBox.alert(this, "Xóa thành công");
                    } catch (Exception e) {
                        MsgBox.alert(this, "Xóa thất bại");
                        e.printStackTrace();
                    }
                } else {
                    MsgBox.alert(this, "Thuộc tính đang được sử dụng");
                }

            }
        }
    }

    private void fillCBTenTT() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbChonTT.getModel();
        model.removeAllElements();
        List<ThuocTinh> list = ttdao.selectAll();
        if (list.isEmpty()) {
            return;
        } else {
            for (ThuocTinh tt : list) {
                model.addElement(tt);
            }
        }
    }

    private void setForm2() {
        ThuocTinh tt = (ThuocTinh) cbChonTT.getSelectedItem();
        txtTenTT.setText(tt.getTenTT());
        taMoTa.setText(tt.getMota());
        btnSua.setEnabled(true);
        btnThem.setEnabled(false);
    }

    private ThuocTinh getForm2() {
        ThuocTinh tt = (ThuocTinh) cbChonTT.getSelectedItem();
        tt.setTenTT(txtTenTT.getText());
        tt.setMota(taMoTa.getText());
        return tt;
    }

    private void fillCBTenTTCT() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbTenTTCT.getModel();
        model.removeAllElements();
        List<ThuocTinh> list = ttdao.selectAll();
        if (list.isEmpty()) {
            return;
        } else {
            for (ThuocTinh tt : list) {
                model.addElement(tt);
            }
        }
    }

    public void HeaderTableModel1() {
        MatHang mh = (MatHang) cbTenMatHang.getSelectedItem();
        List<String[]> listTTT = new ArrayList<String[]>();
        if (mh.getMaMH() != null) {
            listTTT = ctdao.selectbygt(mh.getMaMH());
        }
        Object[] headers = new Object[listTTT.size() + 1];
        headers[0] = "Tên mặt hàng";
        Object[][] rowdt = new Object[1][listTTT.size() + 1];
        rowdt[0][0] = mh.getTenMH();
        for (int i = 0; i < listTTT.size(); i++) {
            headers[i + 1] = listTTT.get(i)[0];
            rowdt[0][i + 1] = listTTT.get(i)[1];
        }
        tbThuocTinhCT.setModel(new DefaultTableModel(rowdt, headers));
    }

    private void clearFormCT() {
        txtGiaTri.setText("");
        cbTenTTCT.setSelectedIndex(0);
        cbTenMatHang.setSelectedIndex(0);

    }

    private void insertTTCT() {
        ThuocTinhChiTiet ct = getForm3();
        try {
            ctdao.insert(ct);
            MsgBox.alert(this, "Thêm thành công");;
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Thêm thất bại!");
        }
        HeaderTableModel1();
        fillHearderToTable();

    }

    private ThuocTinhChiTiet getForm3() {
        ThuocTinhChiTiet ttct = new ThuocTinhChiTiet();
        MatHang mh = (MatHang) cbTenMatHang.getSelectedItem();
        String mnh = mh.getMaMH();
        ttct.setMaMH(mnh);
        ThuocTinh tt = (ThuocTinh) cbTenTTCT.getSelectedItem();
        int matt = tt.getMaTT();
        ttct.setMaTT(matt);
        ttct.setGiaTri(txtGiaTri.getText());
        return ttct;
    }

    private void deleteTTCT() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyển xóa");
        } else {
            MatHang tt = (MatHang) cbTenMatHang.getSelectedItem();
            String mamh = tt.getMaMH();
            int colIndex = tbThuocTinhCT.getSelectedColumn();
            String tenttct = tbThuocTinhCT.getColumnName(colIndex);
            ThuocTinh tta = ttdao.selectMaTT(tenttct);
            int matt = tta.getMaTT();
            if (MsgBox.confirm(this, "Bạn có muốn xóa thuộc tính chi tiết")) {
                try {
                    ctdao.deleteTTCT(mamh, matt);
                    MsgBox.alert(this, "Xóa thành công");
                } catch (Exception e) {
                    MsgBox.alert(this, "Xóa thất bại");
                    e.printStackTrace();
                }
            }
        }
        HeaderTableModel1();
        fillHearderToTable();
    }

    private void updateTTCT() {
        ThuocTinhChiTiet ct = getForm4();
        try {
            ctdao.update(ct);
            HeaderTableModel1();
            MsgBox.alert(this, "Sửa thành công");
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Sửa thất bại!");
        }
        fillHearderToTable();
    }

    private ThuocTinhChiTiet getForm4() {
        ThuocTinhChiTiet ttct = new ThuocTinhChiTiet();
        ttct.setGiaTri(txtGiaTri.getText());
        MatHang mh = (MatHang) cbTenMatHang.getSelectedItem();
        String mamh = mh.getMaMH();
        ttct.setMaMH(mamh);
        int colIndex = tbThuocTinhCT.getSelectedColumn();
        String tenttct = tbThuocTinhCT.getColumnName(colIndex);
        ThuocTinh tt = ttdao.selectMaTT(tenttct);
        int matt = tt.getMaTT();
        ttct.setMaTT(matt);
        return ttct;
    }

    private void editTTCT() {
        int rowIndex = tbThuocTinhCT.getSelectedRow();
        int colIndex = tbThuocTinhCT.getSelectedColumn();
        txtGiaTri.setText((String) tbThuocTinhCT.getValueAt(rowIndex, colIndex));
        String tenct = tbThuocTinhCT.getColumnName(colIndex);
        cbTenTTCT.setSelectedItem(tenct);
    }

    private String check(String btn) {
        String err = "";
        if (CheckData.isNull(txtTenTT.getText())) {
            err += "Tên thuộc tính không được để trống\n";
        } else {
            if (ttdao.selectMaTT(txtTenTT.getText()) != null) {
                err += "Tên thuộc tính trùng";
            }
        }
        return err;
    }

}
